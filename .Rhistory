source(here::here("scripts", "00_libs.R"))
source(here::here("scripts", "01_helpers.R"))
fc_task = read.csv(here("data", "at_csc.csv")) %>%
filter(!is.na(RESPONSE_CORRECT.))
source(here::here("scripts", "00_libs.R"))
source(here::here("scripts", "01_helpers.R"))
fc_task = read.csv(here("data", "at_csc.csv")) %>%
filter(!is.na(RESPONSE_CORRECT.))
f = fc_task %>%
group_by(PARTICIPANT_ID) %>%
summarize(n = n())
desc = fc_task %>%
group_by(PROMPT_TYPE, SPEAKER_TYPE, RESPONSE_CORRECT.) %>%
summarize(n = n()) %>%
mutate(p_s = paste(PROMPT_TYPE, SPEAKER_TYPE, sep = "_"))
percentage = fc_task %>%
group_by(PROMPT_TYPE, SPEAKER_TYPE) %>%
summarize(total = n()) %>%
mutate(p_s = paste(PROMPT_TYPE, SPEAKER_TYPE, sep = "_")) %>%
select(total, p_s) %>%
left_join(desc, by = "p_s") %>%
mutate(pct = n/total)
desc %>%
ggplot(aes(y = n, x = SPEAKER_TYPE,
fill = as.factor(RESPONSE_CORRECT.))) +
geom_col(color = "black", position = "dodge") + facet_grid(~PROMPT_TYPE)
percentage %>%
filter(RESPONSE_CORRECT. == 1) %>%
ggplot(aes(y = pct, fill = SPEAKER_TYPE,
x = PROMPT_TYPE.y)) +
geom_col(color = "black", position = "dodge") +
xlab("Prompt type") +
ylab("Percentage Correct Responses") +
ggtitle("The Percentage of Correct Responses for autistic and neurotypical speakers for each sentence type") +
theme_minimal()
mod1 = brm(RESPONSE_CORRECT. ~ PROMPT_TYPE*SPEAKER_TYPE + (1 | PARTICIPANT_ID)
+ (1 | VIDEO_SCENE), data = fc_task,
family = bernoulli(link = "logit"))
pairs(mod1)
conditional_effects(mod1)
mod1_f = lmer::lme4(RESPONSE_CORRECT. ~ PROMPT_TYPE*SPEAKER_TYPE + (1 | PARTICIPANT_ID)
+ (1 | VIDEO_SCENE), data = fc_task,
family = bernoulli(link = "logit"))
mod1_f = lme4::lmer(RESPONSE_CORRECT. ~ PROMPT_TYPE*SPEAKER_TYPE + (1 | PARTICIPANT_ID)
+ (1 | VIDEO_SCENE), data = fc_task,
family = bernoulli(link = "logit"))
mod1_f = lme4::lmer(RESPONSE_CORRECT. ~ PROMPT_TYPE*SPEAKER_TYPE + (1 | PARTICIPANT_ID)
+ (1 | VIDEO_SCENE), data = fc_task, family = binomial))
mod1_f = lme4::lmer(RESPONSE_CORRECT. ~ PROMPT_TYPE*SPEAKER_TYPE + (1 | PARTICIPANT_ID)
+ (1 | VIDEO_SCENE), data = fc_task, family = binomial)
mod1_f = lme4::glmer(RESPONSE_CORRECT. ~ PROMPT_TYPE*SPEAKER_TYPE +
(1 | PARTICIPANT_ID)
+ (1 | VIDEO_SCENE), data = fc_task, family = binomial)
summary(mod1_f)
conditional_effects(mod1_f)
conditional_effects(mod1_f)
